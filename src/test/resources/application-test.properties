spring.application.name=${OPENSHIFT_APP_NAME:database-connector-ods}
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=${DATABASE_CONN_URL}
spring.datasource.username=${DATABASE_CONN_USERNAME}
spring.datasource.password=${DATABASE_CONN_PASSWORD}
spring.datasource.type=${DATABASE_CONN_POOL_TYPE}
spring.datasource.oracleucp.connection-factory-class-name=${UCP_POOL_CONN_FACTORY_CLASS_NAME}
spring.datasource.oracleucp.connection-pool-name=${UCP_POOL_CONN_NAME}
spring.datasource.oracleucp.connection-wait-timeout=${UCP_POOL_CONN_WAIT_TIMEOUT}
spring.datasource.oracleucp.max-idle-time=${UCP_POOL_CONN_MAX_IDLE_TIME}
spring.datasource.oracleucp.abandoned-connection-timeout=${UCP_POOL_CONN_ABANDONED_CONNECTION_TIMEOUT}
spring.datasource.oracleucp.inactive-connection-timeout=${UCP_POOL_CONN_INACTIVE_CONNECTION_TIMEOUT}
spring.datasource.oracleucp.connection-harvest-trigger-count=${UCP_POOL_CONN_CONNECTION_HARVEST_TRIGGER_COUNT}
spring.datasource.oracleucp.connection-harvest-max-count=${UCP_POOL_CONN_CONNECTION_HARVEST_MAX_COUNT}
spring.datasource.oracleucp.login-timeout=${UCP_POOL_CONN_LOGIN_TIMEOUT}
spring.datasource.oracleucp.initial-pool-size=${UCP_POOL_CONN_INITIAL_POOL_SIZE}
spring.datasource.oracleucp.max-pool-size=${UCP_POOL_CONN_MAX_POOL_SIZE}
spring.datasource.oracleucp.min-pool-size=${UCP_POOL_CONN_MIN_POOL_SIZE}
server.address=0.0.0.0
server.port=8083
connector.database.name=odsdb
connector.database.api.basepath=api/connector/db/odsdb
connector.database.beans.implementationPath=connector.database.beans.impl
connector.database.beans.dao.v1.customerImplclasspath=com.alahli.middleware.customer.dao.ODSDBConnectorImplDao
connector.database.beans.dao.v1.accountsImplclasspath=com.alahli.middleware.account.dao.ODSDBConnectorImplDao
connector.database.beans.dao.v1.creditcardImplclasspath=com.alahli.middleware.creditcard.dao.ODSDBConnectorImplDao
connector.database.beans.dao.v2.customerImplclasspath=com.alahli.middleware.customer.dao.ODSDBConnectorImplDao
connector.database.beans.impl.GetAccountType.httpmethod=POST
connector.database.beans.impl.GetAccountType.v1=${connector.database.beans.dao.v1.accountsImplclasspath}
connector.database.beans.impl.GetCustomerDetails.httpmethod=POST
connector.database.beans.impl.GetCustomerDetails.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetCustomerOneView.httpmethod=POST
connector.database.beans.impl.GetCustomerOneView.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetRetailCustomerDetails.httpmethod=POST
connector.database.beans.impl.GetRetailCustomerDetails.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetPFADetails.httpmethod=POST
connector.database.beans.impl.GetPFADetails.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetCifByWatheeq.httpmethod=POST
connector.database.beans.impl.GetCifByWatheeq.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetCifDetailsByIDs.httpmethod=POST
connector.database.beans.impl.GetCifDetailsByIDs.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetCorporateCustomerDetails.httpmethod=POST
connector.database.beans.impl.GetCorporateCustomerDetails.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.FindCif.httpmethod=POST
connector.database.beans.impl.FindCif.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetPayrollAccount.httpmethod=POST
connector.database.beans.impl.GetPayrollAccount.v1=${connector.database.beans.dao.v1.creditcardImplclasspath}
connector.database.beans.impl.GetLookupTable.httpmethod=POST
connector.database.beans.impl.GetLookupTable.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetCIFDetailsByMobile.httpmethod=POST
connector.database.beans.impl.GetCIFDetailsByMobile.v1=${connector.database.beans.dao.v1.customerImplclasspath}
connector.database.beans.impl.GetLookuptables.httpmethod=POST
connector.database.beans.impl.GetLookuptables.v2=${connector.database.beans.dao.v2.customerImplclasspath}
connector.database.errors.databaseError.system=ODS
connector.database.errors.databaseError.timeout.errorNumber=710
connector.database.errors.databaseError.timeout.errorDescription=${connector.database.errors.database-error.system} Time out
connector.database.errors.databaseError.timeout.nativeError=TIMEOUT
connector.database.errors.databaseError.general.errorNumber=709
connector.database.errors.databaseError.general.errorDescription=${connector.database.errors.database-error.system} Application Error
connector.database.errors.databaseError.general.nativeError=SQL_EXCEPTION
connector.database.errors.applicationError.system=MW
connector.database.errors.applicationError.timeout.errorNumber=782
connector.database.errors.applicationError.timeout.errorDescription=${connector.database.errors.application-error.system} Time out
connector.database.errors.applicationError.timeout.nativeError=TIMEOUT
connector.database.errors.applicationError.general.errorNumber=783
connector.database.errors.applicationError.general.errorDescription=${connector.database.errors.application-error.system} Application Error
connector.database.errors.applicationError.general.nativeError=GENERAL_EXCEPTION
configStoreConnector.apiKeyName=configstore
configStoreConnector.host=${CONFIGSTORE_HOST}
configStoreConnector.port=8080
configStoreConnector.contextPath=${CONFIGSTORE_CONTEXTPATH}
EAIDBConnector.apiKeyName=eai
EAIDBConnector.host=${EAI_HOST}
EAIDBConnector.contextPath=${EAI_CONTEXTPATH}
logging.config=classpath:logback-spring.xml
logging.componentType=Gateway
logging.isloggingDisabled=${LOGGING_FLAG :false}
logging.APIsLoggingFlag=null
logging.APIsKeys=null
camel.opentracing.enabled=${JAEGER_TRACING_FLAG:false}
camel.servlet.mapping.context-path=/*
JAEGER_SAMPLER_PARAM=1.0
JAEGER_SAMPLER_TYPE=const
JAEGER_SERVICE_NAME=${JAEGER_SERVICE_NAME:ODSDB_CONNECTOR}
JAEGER_ENDPOINT=${JAEGER_ENDPOINT}
